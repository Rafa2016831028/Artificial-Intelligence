# -*- coding: utf-8 -*-
"""House Rent Prediction(Linear Regression).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N6t82ia1LHU7XpUejPoXzsqKNfWHPSNk
"""

# Commented out IPython magic to ensure Python compatibility.
from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split
from pprint import pprint
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.linear_model import LinearRegression
# %matplotlib inline

boston = load_boston()
X = boston.data
y = boston.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)
feature_names = boston.feature_names
print(X_train.shape)
print(y_train.shape)
print(feature_names)
print('boston data set object exploring:')
pprint(dir(boston))

housingDataframe = pd.DataFrame(data= np.c_[boston['data'], boston['target']],
                     columns= np.append(boston['feature_names'], ['target']))

housingDataframe.describe()
housingDataframe.head(10)

sns.distplot(housingDataframe['target'])

linearRegression = LinearRegression()
model = linearRegression.fit(X_train,y_train)
print("The R-squared value is: {0:0.4f} \n".format(model.score(X, y)))
coefficient_df = pd.DataFrame({"Features": ['intercept'] + list(feature_names), "Coef": [model.intercept_] + list(model.coef_)})
print(coefficient_df)

predictions = model.predict(X_test)
plt.axis(xmin=0,xmax=40,ymin=0,ymax=40)
plt.scatter(y_test,predictions)
plt.plot(range(40),'g')